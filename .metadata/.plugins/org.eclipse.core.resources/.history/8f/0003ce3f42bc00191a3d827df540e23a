package org.fkit.springboot.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class Solution {
	
	public static void main(String[] args) {
		Solution s = new Solution();
		String[] as = {"flower","flow","flight"};
//		System.out.println(s.longestCommonPrefix(as));
		int[] num1 = {2,5,2,1,2};
//		s.nextPermutation(nums);
		
        System.out.println(s.multiply("9", "9"));
	}
	
	public String multiply(String num1, String num2) {
        StringBuilder ans = new StringBuilder();
        if(num1.equals("0") || num2.equals("0")) return "0";
        
        char[] outer = null;
        char[] inner = null;
        if(num1.length() > num2.length()) {
            outer = num2.toCharArray();
            inner = num1.toCharArray();
        } else {
            outer = num1.toCharArray();
            inner = num2.toCharArray();
        }
        
        List<StringBuilder> list = new ArrayList<StringBuilder>();
        for(int i = outer.length-1; i >= 0 ; i--) {
            StringBuilder sb = new StringBuilder();
            for(int n = outer.length-1; n > i; n--) {
                sb.append(0);
            }
            int carry = 0;
            if(outer[i] == '0') {
            	sb.append(0);
            } else {
            	for(int j = inner.length-1; j >= 0; j--) {
	                int a = Integer.valueOf(String.valueOf(outer[i]));
	                int b = Integer.valueOf(String.valueOf(inner[j]));
	                int product = a * b + carry;
	                carry = product/10;
	                sb.append(product%10);
	            }
            }
            if(carry > 0) sb.append(carry);
            list.add(sb);
        }
        
        
        StringBuilder sb = add(list);
        for(int i = sb.length()-1; i >= 0; i--) {
            ans.append(sb.substring(i,i+1));
        }
        return ans.toString();
    }
	
	public StringBuilder add(List<StringBuilder> list) {
		StringBuilder sb = list.get(0);
		for(int i = 1; i < list.size(); i++) {
			StringBuilder sb1 = sb;
			sb = new StringBuilder();
			StringBuilder sb2 = list.get(i);
			StringBuilder max = (sb1.length() > sb2.length()) ? sb1 : sb2;
			int carry = 0, j = 0;
			for(; j < Math.min(sb1.length(), sb2.length()); j++) {
				int a = Integer.valueOf(sb1.substring(j,j+1));
				int b = Integer.valueOf(sb2.substring(j,j+1));
				int sum = a+b+carry;
				carry = sum/10;
				sb.append(sum%10);
			}
			
			if(carry == 0) {
				sb.append(max.substring(j));
			} else {
				while(j < max.length()) {
					int a = Integer.valueOf(max.substring(j,j+1));
					if(a == 9) {
						sb.append(0);
						j++;
					} else {
						sb.append(a+1);
						carry = 0;
						break;
					}
				}
				if(carry == 1) sb.append(1);
			}
		}
		return sb;
	}
}
