package org.fkit.springboot.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class Solution {
	
	public static void main(String[] args) {
		Solution s = new Solution();
		String[] as = {"flower","flow","flight"};
//		System.out.println(s.longestCommonPrefix(as));
		int[] nums = {3,2,1};
		s.nextPermutation(nums);
        System.out.println(nums);
	}
	
	public void nextPermutation(int[] nums) {
        if(nums == null || nums.length < 2) return;
        
        int c = 0;
        int len = nums.length;
        boolean found = false;
        for(int i = len-2; i >= 0; i--) {
            if(nums[i] < nums[i+1]) {
                for(int j = len-1; j > i; j--) {
                    if(nums[j] > nums[i]) {
                        c = nums[j];
                        nums[j] = nums[i];
                        nums[i] = c;
                        break;
                    }
                }
                reverse(nums, i+1, len);
                found = true;
                break;
            }
        }
        
        if(!found) reverse(nums, 0, len);
    }
    
    public void reverse(int[] nums, int start, int len) {
        int c = 0;
        for(int k=0, j=start+k, l=len-k-1; j < l; k++) {
            c = nums[j];
            nums[j] = nums[l];
            nums[l] = c;
        }
    }
}
