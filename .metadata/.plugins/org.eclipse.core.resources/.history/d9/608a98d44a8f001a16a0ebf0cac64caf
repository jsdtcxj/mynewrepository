package org.fkit.hellotest;

import java.util.LinkedList;
import java.util.Stack;

public class TestTree {

	class TreeNode{
		public int val;
		public TreeNode left;
		public TreeNode right;
	}
	
	public static void main(String[] args) {
		int[] a = {1,2,3,4,5,6,7};
		TestTree t = new TestTree();
		TreeNode tree = t.arrayToTree(a);
		Stack<TreeNode> stack = new Stack<>();
		TreeNode node = tree;
		while(node != null || !stack.isEmpty()) {
			if(node != null) {
				while(node != null) {
					stack.push(node);
					node = node.left;
				}
			} else {
				node = stack.pop();
				System.out.print(node.val + " ");
			}
		}
		
	}
	
	public TreeNode arrayToTree(int[] a) {
		if(a == null || a.length == 0) return null;
		return buildTree(0, a.length-1, a);
	}
	
	public TreeNode buildTree(int start, int end, int[] a) {
		if(start <= end) {
			int mid = start + (end-start)/2;
			TreeNode node = new TreeNode();
			node.val = a[mid];
			node.left = buildTree(start, mid-1, a);
			node.right = buildTree(mid+1, end, a);
			return node;
		}
		return null;
	}
}
