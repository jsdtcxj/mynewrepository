package org.fkit.springboot.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class Solution {
	
	public static void main(String[] args) {
		Solution s = new Solution();
		String[] as = {"flower","flow","flight"};
//		System.out.println(s.longestCommonPrefix(as));
		int[] num1 = {-1,2,-1,2,1,-1,2,1};
//		s.nextPermutation(num1);
//		char[][] board = {{'5','3','.','.','7','.','.','.','.'},{'6','.','.','1','9','5','.','.','.'},{'.','9','8','.','.','.','.','6','.'},{'8','.','.','.','6','.','.','.','3'},{'4','.','.','8','.','3','.','.','1'},{'7','.','.','.','2','.','.','.','6'},{'.','6','.','.','.','.','2','8','.'},{'.','.','.','4','1','9','.','.','5'},{'.','.','.','.','8','.','.','7','9'}};
		int[][] matrix = {{1,2,3},{4,5,6}, {7,8,9}};
        s.rotate(matrix);
        for(int i = 0; i < matrix.length; i++) {
        	for(int j = 0; j < matrix[0].length; j++) {
        		System.out.print(matrix[i][j] + " ");
        	}
        	System.out.println();
        }
//        System.out.println(s.ans.size());
   }
	
	public void rotate(int[][] matrix) {
        if(matrix != null && matrix.length > 0) {
            int len = matrix.length;
            int max = len*len/2+1;
            int temp = 0;
            for(int i = 0; i < len/2+1; i++) {
                for(int j = 0; j < len/2+1; j++) {
                    int row1 = i, col1 = j, row2,col2;
                    temp = matrix[i][j];
                    for(int k = 0; k < 3; k++) {
                        row2 = col1;
                        col2 = len-row1-1;
                        matrix[row2][col2] = temp;
                        temp = matrix[row2][col2];
                        row1 = row2;
                        col1 = col2;
                    }
                }
            }
        }
	}

}
