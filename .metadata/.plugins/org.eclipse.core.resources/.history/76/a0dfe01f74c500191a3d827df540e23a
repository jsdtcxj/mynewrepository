package org.fkit.springboot.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class Solution {
	
	public static void main(String[] args) {
		Solution s = new Solution();
		String[] as = {"flower","flow","flight"};
//		System.out.println(s.longestCommonPrefix(as));
		int[] num1 = {1,1,1,0};
//		s.nextPermutation(num1);
//		char[][] board = {{'5','3','.','.','7','.','.','.','.'},{'6','.','.','1','9','5','.','.','.'},{'.','9','8','.','.','.','.','6','.'},{'8','.','.','.','6','.','.','.','3'},{'4','.','.','8','.','3','.','.','1'},{'7','.','.','.','2','.','.','.','6'},{'.','6','.','.','.','.','2','8','.'},{'.','.','.','4','1','9','.','.','5'},{'.','.','.','.','8','.','.','7','9'}};
		int[][] matrix = {{1,2,3,4,5},{1,2,3,4,5},{1,2,3,4,5},{1,2,3,4,5},{1,2,3,4,5}};
//        s.rotate(matrix);
//        for(int i = 0; i < matrix.length; i++) {
//        	for(int j = 0; j < matrix[0].length; j++) {
//        		System.out.print(matrix[i][j] + " ");
//        	}
//        	System.out.println();
//        }
        String[] strs = {""};
        System.out.println(s.getMaxValue(10));
   }
	
	public int getMaxValue(int n) {
		int[] weight = {4,5,6,2,2};
		int[] value = {6,4,5,3,6};
		int[][] max = new int[weight.length+1][n+1];
		
		for(int i = 0; i < weight.length; i++) {
			for(int j = 1; j <= n; j++) {
				if(weight[i] <= j) {
					max[i+1][j] = Math.max(max[i][j], max[i][j-weight[i]]+value[i]);
				} else {
					max[i+1][j] = max[i][j];
				}
			}
		}
		
		return max[weight.length][n];
	}
}
