package org.fkit.springboot.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class Solution {
	
	public static void main(String[] args) {
		Solution s = new Solution();
		String[] as = {"flower","flow","flight"};
//		System.out.println(s.longestCommonPrefix(as));
		int[] num1 = {1,3,2};
		s.nextPermutation(num1);
		
        System.out.println(num1);
	}
	
	public void nextPermutation(int[] nums) {
        if(nums == null || nums.length < 2) return;

        int len = nums.length;
        boolean found = false;
        for(int i = len-2; i >= 0; i--) {
            if(nums[i] < nums[i+1]) {
                for(int j = len-1; j > i; j--) {
                    if(nums[i] < nums[j]) {
                        swap(nums, i, j);
                        break;
                    }
                }
                reverse(nums, i+1);
                found = true;
                break;
            }
        }

        if(!found)reverse(nums,0);
    }

    public void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    public void reverse(int[] nums, int start) {
        int len = nums.length;
        if(start+1 < len) {
            int end = len - 1;
            while(start < end) {
                swap(nums, start, end);
                start++;
                end--;
            }
        }
    }
}
