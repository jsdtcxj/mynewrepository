package org.fkit.springboot.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class Solution {
	
	public static void main(String[] args) {
		Solution s = new Solution();
		String[] as = {"flower","flow","flight"};
//		System.out.println(s.longestCommonPrefix(as));
		int[] num1 = {-1,2,-1,2,1,-1,2,1};
//		s.nextPermutation(num1);
//		char[][] board = {{'5','3','.','.','7','.','.','.','.'},{'6','.','.','1','9','5','.','.','.'},{'.','9','8','.','.','.','.','6','.'},{'8','.','.','.','6','.','.','.','3'},{'4','.','.','8','.','3','.','.','1'},{'7','.','.','.','2','.','.','.','6'},{'.','6','.','.','.','.','2','8','.'},{'.','.','.','4','1','9','.','.','5'},{'.','.','.','.','8','.','.','7','9'}};
		int[][] matrix = {{1,2,3,4，5},{1,2,3,4，5},{1,2,3,4，5},{1,2,3,4，5},{1,2,3,4，5}};
        s.rotate(matrix);
        for(int i = 0; i < matrix.length; i++) {
        	for(int j = 0; j < matrix[0].length; j++) {
        		System.out.print(matrix[i][j] + " ");
        	}
        	System.out.println();
        }
//        System.out.println(s.ans.size());
   }
	
	public void rotate(int[][] matrix) {
	    int n = matrix.length;
	    for (int i = 0; i < (n + 1) / 2; i ++) {
	      for (int j = 0; j < n / 2; j++) {
	        int temp = matrix[n - 1 - j][i];
	        matrix[n - 1 - j][i] = matrix[n - 1 - i][n - j - 1];
	        matrix[n - 1 - i][n - j - 1] = matrix[j][n - 1 -i];
	        matrix[j][n - 1 - i] = matrix[i][j];
	        matrix[i][j] = temp;
	      }
	    }
	  }
	
}
