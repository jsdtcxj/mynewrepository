package org.fkit.springboot.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class Solution {
	
	public static void main(String[] args) {
		Solution s = new Solution();
		String[] as = {"flower","flow","flight"};
//		System.out.println(s.longestCommonPrefix(as));
		int[] num1 = {1,1,1,0};
//		s.nextPermutation(num1);
//		char[][] board = {{'5','3','.','.','7','.','.','.','.'},{'6','.','.','1','9','5','.','.','.'},{'.','9','8','.','.','.','.','6','.'},{'8','.','.','.','6','.','.','.','3'},{'4','.','.','8','.','3','.','.','1'},{'7','.','.','.','2','.','.','.','6'},{'.','6','.','.','.','.','2','8','.'},{'.','.','.','4','1','9','.','.','5'},{'.','.','.','.','8','.','.','7','9'}};
		int[][] matrix = {{1,2,3,4,5},{1,2,3,4,5},{1,2,3,4,5},{1,2,3,4,5},{1,2,3,4,5}};
//        s.rotate(matrix);
//        for(int i = 0; i < matrix.length; i++) {
//        	for(int j = 0; j < matrix[0].length; j++) {
//        		System.out.print(matrix[i][j] + " ");
//        	}
//        	System.out.println();
//        }
        String[] strs = {""};
        System.out.println(s.getMaxProfit(4));
   }
	
	public int getMaxProfit(int n) {
	    int[] prices = {0, 1, 5, 8, 9, 10, 17, 17, 20, 24, 30};
	    int[] memo = new int[prices.length];
	    memo[1] = 1;
	    return process(n, prices, memo);
	}

	public int process(int n, int[] prices, int[] memo) {
		if(memo[n] > 0) {
			return memo[n];
		} else if(n == 0) {
	        return 0;
	    } else {
	        int max = 0;
	        for(int i = 1; i <= n; i++) {
	            max = Math.max(max, prices[i]+process(n-i, prices, memo));
	        }
	        memo[n] = max;
	        return max;
	    }
	}
}
