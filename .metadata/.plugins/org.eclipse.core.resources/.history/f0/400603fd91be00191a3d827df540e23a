package org.fkit.springboot.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class Solution {
	
	public static void main(String[] args) {
		Solution s = new Solution();
		String[] as = {"flower","flow","flight"};
//		System.out.println(s.longestCommonPrefix(as));
		int[] num1 = {1, 3, 2};
//		s.nextPermutation(num1);
//		char[][] board = {{'5','3','.','.','7','.','.','.','.'},{'6','.','.','1','9','5','.','.','.'},{'.','9','8','.','.','.','.','6','.'},{'8','.','.','.','6','.','.','.','3'},{'4','.','.','8','.','3','.','.','1'},{'7','.','.','.','2','.','.','.','6'},{'.','6','.','.','.','.','2','8','.'},{'.','.','.','4','1','9','.','.','5'},{'.','.','.','.','8','.','.','7','9'}};
		
        System.out.println(s.multiply("123", "5"));
	}
	
	public String multiply(String num1, String num2) {
	    if(num1.equals("0") || num2.equals("0")) return "0";
	    
	    StringBuilder sb = new StringBuilder();
	    int len1 = num1.length();
	    int len2 = num2.length();
	    int[] products = new int[len1+len2-1];
	    char[] array1 = num1.toCharArray();
	    char[] array2 = num2.toCharArray();
	    for(int i = len1-1; i >= 0; i--) {
	        for(int j = len2-1; j >= 0; j--) {
	            int n1 = array1[i]-48;
	            int n2 = array2[j]-48;
	            products[i+j] = n1*n2;
	            if(products[i+j] > 9 && (i+j) > 0) {
	                products[i+j-1] += products[i+j]/10;
	                products[i+j] = products[i+j]%10;
	            }
	        }
	    }
	    
	    for(int i = 0; i < products.length; i++) {
	        sb.append(products[i]);
	    }
	    return sb.toString();
	}
}
