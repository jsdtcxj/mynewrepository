package org.fkit.springboot.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class Solution {
	
	public static void main(String[] args) {
		Solution s = new Solution();
		String[] as = {"flower","flow","flight"};
//		System.out.println(s.longestCommonPrefix(as));
		int[] num1 = {2,5,0,0};
//		s.nextPermutation(num1);
		char[][] board = {{'5','3','.','.','7','.','.','.','.'},{'6','.','.','1','9','5','.','.','.'},{'.','9','8','.','.','.','.','6','.'},{'8','.','.','.','6','.','.','.','3'},{'4','.','.','8','.','3','.','.','1'},{'7','.','.','.','2','.','.','.','6'},{'.','6','.','.','.','.','2','8','.'},{'.','.','.','4','1','9','.','.','5'},{'.','.','.','.','8','.','.','7','9'}};
		int[][] matrix = {{1,2,3},{1,2,3},{1,2,3}};
//        s.rotate(matrix);
//        for(int i = 0; i < matrix.length; i++) {
//        	for(int j = 0; j < matrix[0].length; j++) {
//        		System.out.print(matrix[i][j] + " ");
//        	}
//        	System.out.println();
//        }
        String[] strs = {""};
        System.out.println(s.isValidSudoku(board));
//        s.rotate(matrix);
   }
	
	public boolean isValidSudoku(char[][] board) {
        int len = board.length;
        int[][] row = new int[len][len];
        int[][] column = new int[len][len];
        int[][] matrix = new int[len][len];
        
        int index = 0;
        int num = 0;
        for(int i = 0; i < len; i++) {
            for(int j = 0; j < len; j++) {
                index = (i/3)*3 + j/3;
                num = board[i][j] - '1';
                row[i][num]++;
                column[j][num]++;
                matrix[index][num]++;
                if(row[i][num] > 1 || column[j][num] > 1 || matrix[index][num] > 1) {
                    return false;
                }
            }
        }
        return true;
    }
}
