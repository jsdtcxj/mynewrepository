package org.fkit.springboot.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class Solution {
	
	public static void main(String[] args) {
		Solution s = new Solution();
		String[] as = {"flower","flow","flight"};
//		System.out.println(s.longestCommonPrefix(as));
		int[] num1 = {1, 1, 2};
//		s.nextPermutation(num1);
//		char[][] board = {{'5','3','.','.','7','.','.','.','.'},{'6','.','.','1','9','5','.','.','.'},{'.','9','8','.','.','.','.','6','.'},{'8','.','.','.','6','.','.','.','3'},{'4','.','.','8','.','3','.','.','1'},{'7','.','.','.','2','.','.','.','6'},{'.','6','.','.','.','.','2','8','.'},{'.','.','.','4','1','9','.','.','5'},{'.','.','.','.','8','.','.','7','9'}};
		
        System.out.println(s.permute(num1));
        System.out.println(s.ans.size());
   }
	
private List<List<Integer>> ans = new ArrayList<List<Integer>>();
    
    public List<List<Integer>> permute(int[] nums) {
        if(nums != null || nums.length > 0) {
//            Arrays.sort(nums);
            List<Integer> source = new ArrayList<Integer>(nums.length);
            for(int num : nums) {
                source.add(num);
            }
            ans.add(source);
            process(source, 0);
        }
        return ans;
    }
    
    public void process(List<Integer> source, int index) {
        int size = source.size();
        for(int i = index; i < size; i++, index++) {
        	for(int j = i+1; j < size; j++) {
        		List<Integer> list = source;
                if(source.get(i) != source.get(j)) {
                	list = new ArrayList<Integer>(source);
	                Collections.swap(list, i, j);
	                ans.add(list);
        		}
                process(list, index+1);
            }
        }
    }
}
