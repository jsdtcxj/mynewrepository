package org.fkit.springboot.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class Solution {
	
	public static void main(String[] args) {
		Solution s = new Solution();
		String[] as = {"flower","flow","flight"};
//		System.out.println(s.longestCommonPrefix(as));
		int[] num1 = {1,1,1,0};
//		s.nextPermutation(num1);
//		char[][] board = {{'5','3','.','.','7','.','.','.','.'},{'6','.','.','1','9','5','.','.','.'},{'.','9','8','.','.','.','.','6','.'},{'8','.','.','.','6','.','.','.','3'},{'4','.','.','8','.','3','.','.','1'},{'7','.','.','.','2','.','.','.','6'},{'.','6','.','.','.','.','2','8','.'},{'.','.','.','4','1','9','.','.','5'},{'.','.','.','.','8','.','.','7','9'}};
		int[][] matrix = {{1,2,3,4,5},{1,2,3,4,5},{1,2,3,4,5},{1,2,3,4,5},{1,2,3,4,5}};
//        s.rotate(matrix);
//        for(int i = 0; i < matrix.length; i++) {
//        	for(int j = 0; j < matrix[0].length; j++) {
//        		System.out.print(matrix[i][j] + " ");
//        	}
//        	System.out.println();
//        }
        String[] strs = {""};
        System.out.println(s.getShortestTime(4));
   }
	
	public int getShortestTime(int n) {
		int[] time = {1, 2, 3, 10};
		int[] memo = new int[n+1];
		
		Arrays.sort(time);
		memo[1] = time[0];
		memo[2] = time[0];
		
		return shortest(time, memo, n);
	}
	
	public int shortest(int[] time, int[] memo, int n) {
		if(memo[n] != 0) {
			return memo[n];
		} else {
			int total1 = shortest(time, memo, n-1) + time[0] + time[n-1];
			int total2 = shortest(time, memo, n-2) + time[0] + time[n-1] + time[1]*2;
			int total = Math.min(total1, total2);
			memo[n] = total;
			return total;
		}
	}
}
