package org.fkit.springboot.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class Solution {
	
	public static void main(String[] args) {
		Solution s = new Solution();
		String[] as = {"flower","flow","flight"};
//		System.out.println(s.longestCommonPrefix(as));
		int[] num1 = {1, 3};
//		s.nextPermutation(num1);
		char[][] board = {{'5','3','.','.','7','.','.','.','.'},{'6','.','.','1','9','5','.','.','.'},{'.','9','8','.','.','.','.','6','.'},{'8','.','.','.','6','.','.','.','3'},{'4','.','.','8','.','3','.','.','1'},{'7','.','.','.','2','.','.','.','6'},{'.','6','.','.','.','.','2','8','.'},{'.','.','.','4','1','9','.','.','5'},{'.','.','.','.','8','.','.','7','9'}};
		
        System.out.println(s.isValidSudoku(board));
	}
	
	public boolean isValidSudoku(char[][] board) {
        Map<Character,Integer>[] rows = new Map[9];
        Map<Character,Integer>[] columns = new Map[9];
        Map<Character,Integer>[] boxes = new Map[9];

        for(int i = 0; i < 9; i++) {
            rows[i] = new HashMap<Character, Integer>();
            columns[i] = new HashMap<Character, Integer>();
            boxes[i] = new HashMap<Character, Integer>();
        }

        for(int i = 0; i < 9; i++) {
            for(int j = 0; j < 9; j++) {
                char c = board[i][j];
                if(c != '.') {
                    int box_index = (i/3)*3 + j/3;

                    rows[i].put(c, rows[i].getOrDefault(c, 0)+1);
                    columns[j].put(c, rows[j].getOrDefault(c, 0)+1);
                    boxes[box_index].put(c, rows[box_index].getOrDefault(c, 0)+1);
                    if(rows[i].get(c) > 1 || columns[j].get(c) > 1 || boxes[box_index].get(c) > 1) {
                        return false;
                    }
                }
            }
        }
        return true;
    }
}
