package org.fkit.springboot.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Solution {
	
	public static void main(String[] args) {
		Solution s = new Solution();
		String[] as = {"flower","flow","flight"};
//		System.out.println(s.longestCommonPrefix(as));
		int[] num1 = {2,3,1};
//		s.nextPermutation(num1);
		char[][] board = {{'A','B','C','E'},{'S','F','E','S'},{'A','D','E','E'}};
		int[][] matrix = {{0,0,0,1,1,1,0,1,0,0},{1,1,0,0,0,1,0,1,1,1},{0,0,0,1,1,1,0,1,0,0},{0,1,1,0,0,0,1,0,1,0},{0,1,1,1,1,1,0,0,1,0},{0,0,1,0,1,1,1,1,0,1},{0,1,1,0,0,0,1,1,1,1},{0,0,1,0,0,1,0,1,0,1},{1,0,1,0,1,1,0,0,0,0},{0,0,0,0,1,1,0,0,0,1}};
//        s.rotate(matrix);
//        for(int i = 0; i < matrix.length; i++) {
//        	for(int j = 0; j < matrix[0].length; j++) {
//        		System.out.print(matrix[i][j] + " ");
//        	}
//        	System.out.println();
//        }
        String[] strs = {"czvh","zczpzvdhx","zczpzvh","zczpzvhx","zcpzvh"};
        int[] A = {3,1};
        int[] B = {2,5,6};
        int[][] points = {{0,0,0},{0,1,0},{0,0,0}};
        String str = "110101011011000011011111000000";
        System.out.println(s.search(A, 1));
//        s.merge(A, 3, B, 3);
   }
    
	public int search(int[] nums, int target) {
	    if(nums == null || nums.length == 0) return -1;
	    int start = 0, end = nums.length-1;
	    while(start < end) {
	        int mid = start + (end-start)/2;
	        if(target == nums[mid]) {
	            return mid;
	        }
	        if(nums[start] < nums[mid]) {
	            if(target >= nums[start] && target < nums[mid]) {
	                end = mid;
	            } else {
	                start = mid+1;
	            }
	        } else {
	            if(target > nums[mid] && target <= nums[end]) {
	                start = mid+1;
	            } else {
	                end = mid;
	            }
	        }
	    }
	    return (nums[start] == target) ? start : -1;
	}
 }
