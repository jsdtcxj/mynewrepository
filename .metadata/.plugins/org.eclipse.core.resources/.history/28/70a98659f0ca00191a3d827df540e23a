package org.fkit.springboot.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class Solution {
	
	public static void main(String[] args) {
		Solution s = new Solution();
		String[] as = {"flower","flow","flight"};
//		System.out.println(s.longestCommonPrefix(as));
		int[] num1 = {2,3,1};
//		s.nextPermutation(num1);
		char[][] board = {{'5','3','.','.','7','.','.','.','.'},{'6','.','.','1','9','5','.','.','.'},{'.','9','8','.','.','.','.','6','.'},{'8','.','.','.','6','.','.','.','3'},{'4','.','.','8','.','3','.','.','1'},{'7','.','.','.','2','.','.','.','6'},{'.','6','.','.','.','.','2','8','.'},{'.','.','.','4','1','9','.','.','5'},{'.','.','.','.','8','.','.','7','9'}};
		int[][] matrix = {{1,2,3},{1,2,3},{1,2,3}};
//        s.rotate(matrix);
//        for(int i = 0; i < matrix.length; i++) {
//        	for(int j = 0; j < matrix[0].length; j++) {
//        		System.out.print(matrix[i][j] + " ");
//        	}
//        	System.out.println();
//        }
        String[] strs = {""};
        System.out.println(s.generateParenthesis(3));
//        s.rotate(matrix);
   }
	
	private List<String> ans = new ArrayList<String>();
	public List<String> generateParenthesis(int n) {
	    generate("", n, n);
	    return ans;
	}

	public void generate(String str, int leftCount, int rightCount) {
	    StringBuilder sb = new StringBuilder(str);
	    if(leftCount == 0) {
	        for(int i = 1; i <= rightCount; i++) {
	            sb.append(")");
	        }
	        ans.add(sb.toString());
	    } else {
	        for(int i = 1; i <= leftCount; i++) {
	            sb.append("(");
	            StringBuilder right = new StringBuilder(sb.toString());
	            for(int j = 1; j <= i; j++) {
	                right.append(")");
	                generate(right.toString(), leftCount-i, rightCount-j);
	                if(i == leftCount) break;
	            }
	        }
	    }
	}
}
