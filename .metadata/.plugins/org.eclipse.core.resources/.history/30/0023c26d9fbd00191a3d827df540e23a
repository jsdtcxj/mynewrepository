package org.fkit.springboot.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class Solution {
	
	public static void main(String[] args) {
		Solution s = new Solution();
		String[] as = {"flower","flow","flight"};
//		System.out.println(s.longestCommonPrefix(as));
		int[] num1 = {1,3};
//		s.nextPermutation(num1);
		
        System.out.println(s.search(num1, 3));
	}
	
	public int search(int[] nums, int target) {
	    int len = nums.length;
	    if(nums == null || len == 0) return -1;
	    if(len == 1) return (nums[0] == target) ? 0 : -1;
	    
	    int start = 0, end = len-1;
	    while(start < end) {
	        int mid = (start+end)>>1;
	        if(nums[mid] <= nums[end]) {
	            end = mid;
	        } else {
	            start = mid+1;
	        }
	    }
	    
	    if(target >= nums[0]) {
	        start = 0;
	    } else {
	        end = len -1;
	    }
	    while(start < end) {
	        int mid = (start+end)>>1;
	        if(target <= nums[mid]) {
	            end = mid;
	        } else {
	            start = mid+1;
	        }
	    }
	    
	    return (nums[start] == target) ? start : -1;
	}
}
