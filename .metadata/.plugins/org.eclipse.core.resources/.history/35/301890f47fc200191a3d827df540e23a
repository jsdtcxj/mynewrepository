package org.fkit.springboot.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class Solution {
	
	public static void main(String[] args) {
		Solution s = new Solution();
		String[] as = {"flower","flow","flight"};
//		System.out.println(s.longestCommonPrefix(as));
		int[] num1 = {1,1,1,0};
//		s.nextPermutation(num1);
//		char[][] board = {{'5','3','.','.','7','.','.','.','.'},{'6','.','.','1','9','5','.','.','.'},{'.','9','8','.','.','.','.','6','.'},{'8','.','.','.','6','.','.','.','3'},{'4','.','.','8','.','3','.','.','1'},{'7','.','.','.','2','.','.','.','6'},{'.','6','.','.','.','.','2','8','.'},{'.','.','.','4','1','9','.','.','5'},{'.','.','.','.','8','.','.','7','9'}};
		int[][] matrix = {{1,2,3,4,5},{1,2,3,4,5},{1,2,3,4,5},{1,2,3,4,5},{1,2,3,4,5}};
//        s.rotate(matrix);
//        for(int i = 0; i < matrix.length; i++) {
//        	for(int j = 0; j < matrix[0].length; j++) {
//        		System.out.print(matrix[i][j] + " ");
//        	}
//        	System.out.println();
//        }
        String[] strs = {""};
        System.out.println(s.canJump(num1));
   }
	
	private int[] status;
    public boolean canJump(int[] nums) {
        int len = nums.length;
        if(len == 1) return true;
        
        status = new int[len];
        return jump(nums, 0);
    }
    
    public boolean jump(int[] nums, int index) {
        if(nums[index] >= nums.length-index-1) {
            status[index] = 1;
            return true;
        } else {
            for(int i = 1; i <= nums[index]; i++) {
                int next = index+i;
                if(nums[next] >= nums.length-next-1) {
                    status[next] = 1;
                    return true;
                } else {
                    if(status[next] == 0) {
                       status[next] = jump(nums, next) ? 1 : -1;
                    } 
                }
            }
            
        }
        return false;
    }
}
